# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  release:
    type: ['published']

permissions:
  contents: write  # Ensures the workflow has the correct write permissions

env:
  GO_VERSION: '1.22'

jobs:

  build:
    runs-on: self-hosted
    strategy:
      matrix:
        goos: [linux, windows, freebsd]
        goarch: [amd64, arm64]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Test
      run: go test -v ./...

    - name: Build
      run: |
          mkdir -p ./dist/${{ matrix.goos }}_${{ matrix.goarch }}_${{ github.event.release.name }}
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o ./dist/${{ matrix.goos }}_${{ matrix.goarch }}_${{ github.event.release.name }}/file-mover-daemon cmd/main.go

    - name: Upload Release Artifacts
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/${{ matrix.goos }}_${{ matrix.goarch }}_${{ github.event.release.name }}/file-mover-daemon
        asset_name: file-mover-daemon-${{ matrix.goos }}-${{ matrix.goarch }}-${{ github.event.release.name }}
        asset_content_type: application/octet-stream
